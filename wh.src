'------------------------------------------------------------
' 入出库，盘点
'--------------------------------------------------------------------------
'$include:'const.inc'
'$include:'util.def'
'$include:'util.inc'
'$include:'screen.def'
'$include:'screen.inc'
'$include:'input.def'
'$include:'input.inc'
'$include:'com.def'
'$include:'com.inc'
'$include:'barcode.def'
'$include:'barcode.inc'
'$include:'itemcach.def'
'$include:'itemcach.inc'
'$include:'postcach.def'
'$include:'postcach.inc'
'$include:'wh.def'

'-- screen state
  const WH.SCREEN.START  =1
  const WH.SCREEN.FINISH =-1

  const WH.SCREEN.USER        =0 ' TODO: hold off
  const WH.SCREEN.SCAN        =1
  const WH.SCREEN.VERIFY      =2
  const WH.SCREEN.SEND        =3
  const WH.SCREEN.MISSING     =4
  const WH.SCREEN.REGISTER    =5
  const WH.SCREEN.ISSUENEWJAN =6
  const WH.SCREEN.INPUTCODE   =7
  const WH.SCREEN.VERIFYITEM  =8

'-- string const variable
  const WH.MAXPAGESIZE   = 10 ' 10 records per page

  global WH.NOTFOUND$[6]: WH.NOTFOUND$="999999"
  global WH.MAXNUM$[6]: WH.MAXNUM$="999999"

'-- other const variables
  const WH.IDLEN=Util.MAXIDLEN
  const WH.ITEMLEN=Util.MAXSTRLEN
  const WH.CODELEN=20
  const WH.RECORDLEN=100

'-- shared variable
  global WH.barcode$[15]     ' scanned barcode
  global WH.num$[10]         ' quantity
  global WH.productName$[100]       ' item name
  global WH.missingId$[10]   ' missing id (not barcode)
  global WH.productCode$[20] ' product code
  global WH.existsBarcode%   ' exists JAN?

'------------------------------------------------------------
' check user
'
' NOT USED 
'------------------------------------------------------------
  function WH.ScanUser%(func%)
    private numStr$

    call Screen.Init
    call Screen.Footer
    locate 1,1
    print "请扫描担当者"
    locate ,,1 : cursor on
    WH.barcode$ = Barcode.BarcodeKey$(Barcode.CODE39$)
    if instr(Input.CODE.ESC$, WH.barcode$)>0 then
      private ret%
      ret%=PostCache.Flush%
      WH.ScanUser%=WH.SCREEN.FINISH
      exit function
    end if
    ' TODO, if this is required.

    WH.ScanUser%=WH.SCREEN.SCAN
  end function

'------------------------------------------------------------
' scan barcode
'------------------------------------------------------------
  function WH.ScanBarcode%(func%)
    private numStr$
    private ret%

    call Screen.Init
    call Screen.Footer

    locate 1,1
    print "请扫描条码"
    locate ,,1 : cursor on
    WH.barcode$ = Barcode.BarcodeKey2$(Barcode.EAN13$,Barcode.NW7A$)
    if instr(Input.CODE.ESC$, WH.barcode$)>0 then
      ret%=PostCache.Flush%
      WH.ScanBarcode%=WH.SCREEN.FINISH
      exit function
    end if

    locate 1.3
    print "数量？(无限:"+WH.MAXNUM$+")";
    locate 1,9
    numStr$=Input.Input$(len(WH.MAXNUM$),1) 'up to 6 digits

    if instr(Input.CODE.ESC$,numStr$)>0 then
      ret%=PostCache.Flush%
      WH.ScanBarcode%=WH.SCREEN.FINISH
      exit function
    end if

    WH.num$=numStr$

    WH.ScanBarcode%=WH.SCREEN.VERIFY
  end function

'------------------------------------------------------------
' verify the barcode
'------------------------------------------------------------
  function WH.VerifyBarcode%(func%)
    private k$[1]
    private ret$[Com.RECVSIZE]
    private rec&

    call Screen.Init
    call Screen.Footer
    locate 1,1
    print "请扫描条码..."
    rec&=ItemCache.SearchItemByBarcode&(WH.barcode$)
    if rec&=0 then
      ' not found...
      WH.existsBarcode%=0
      WH.VerifyBarcode%=WH.SCREEN.MISSING
    else
      ' found!
      WH.productName$=ItemCache.productName$
      WH.existsBarcode%=1
      WH.VerifyBarcode%=WH.SCREEN.VERIFYITEM
      WH.missingId$=""
    end if

  end function

'------------------------------------------------------------
' verify item and quantity
'------------------------------------------------------------
  function WH.VerifyItem%(func%)
    private retYN$[1]

    call Screen.Init
    call Screen.Footer
    locate 1,1
    screen ,Lc.RAT.REVERSE
    print WH.productName$
    screen ,Lc.RAT.NORMAL
    print "有"
    if WH.num$<>WH.MAXNUM$ then
      screen ,Lc.RAT.REVERSE
      print WH.num$;
      screen ,Lc.RAT.NORMAL
      print "个?"
    else
      screen ,Lc.RAT.REVERSE
      print "[无限]";
      screen ,Lc.RAT.NORMAL
      print "个?"
    end if
    print
    retYN$=Input.InputYesNo$
    print retYN$
    if retYN$<>"Y" then
      WH.VerifyItem%=WH.SCREEN.MISSING
      exit function
    end if
    if WH.missingId$="" then
      WH.VerifyItem%=WH.SCREEN.SEND
    else
      WH.VerifyItem%=WH.SCREEN.REGISTER
    end if
  end function

'------------------------------------------------------------
' send barcode
'------------------------------------------------------------
  function WH.SendBarcode%(func%)
    private ret$[Com.RECVSIZE]

    call Screen.Init
    call Screen.Footer
    locate 1,1
    if func%=APP.FUNC.INBOUND% or func%=APP.FUNC.INVENTORY% then
      print "数据加入队列..."
      private s%
      s%=PostCache.Queue%(WH.barcode$,WH.num$,"",func%)
      if s%=0 then
        ret$="OK"
      else
        ret$="ERR"
      end if
    else
      print "数据送信中..."
      ret$= Com.Http.Post$(Com.Http.URLPREFIX$+"/postItem.php","c="+WH.barcode$+"&n="+WH.num$+"&f="+mid$(str$(func%),2))
    end if
    select ret$
      case"OK"
      '--print "完了!"
      '--Input.InputAnyKey
      case "OUTOFSTOCK"
        beep 1
        print "超过库存数"
        Input.InputAnyKey
      case else
        print "更新失败!"
        print "请重新扫描一遍";
        Input.InputAnyKey
    end select
    WH.SendBarcode%=WH.SCREEN.SCAN
  end function

'------------------------------------------------------------
' choose missing item
'------------------------------------------------------------
  function WH.ChooseMissing%(func%)
    private ret$[Com.RECVSIZE]
    private ids$(WH.RECORDLEN)[WH.IDLEN]
    private names$(WH.RECORDLEN)[WH.ITEMLEN]
    private productCodes$(WH.RECORDLEN)[WH.CODELEN]
    private cnt%
    private pos%:pos%=-1
    private size%      '-- page size
    private offset%
    private total%
    private meta$[100] '-- meta info
    private idOffset%
    private totalPages%
    private currentPage%
    private done%

    call Screen.Init
    call Screen.Footer
    locate 1,1
    print "未登录列表取得中..."

    offset%=0
    size%=WH.MAXPAGESIZE
    done%=0
    while done%=0
      ret$= Com.Http.Get$(Com.Http.URLPREFIX$+"/listItem.php?o="+mid$(str$(offset%),2)+"?s="+mid$(str$(size%),2))
      if offset%>0 then
        idOffset%=1
        ids$(0)="PREV"
        names$(0)="←[前页]"
      else
        idOffset%=1
        ids$(0)="DIRECT_INPUT"
        names$(0)="<<产品编号输入>>"
      end if
      cnt%=Util.ParseListTabData%(ret$,meta$,ids$,idOffset%,names$,productCodes$)
      total%=Util.GetPageInfo%(meta$,offset%,size%)

      totalPages%=1+(total%-1)/size%
      currentPage%=1+offset%/size%

      if totalPages%>currentPage% then
        ids$(idOffset%+cnt%)="NEXT"
        names$(idOffset%+cnt%)="[后页]→"
        cnt%=cnt%+1
      end if

      ids$(idOffset%+cnt%)=WH.NOTFOUND$
      names$(idOffset%+cnt%)="<<无记录>>"
      cnt%=cnt%+1

      pos%=Input.SelectList%(names$,idOffset%+cnt%)

      if pos%>=0 then
          select ids$(pos%)
          case "PREV"
            offset%=offset%-size%
          case "NEXT"
            offset%=offset%+size%
          case "DIRECT_INPUT"
            WH.ChooseMissing%=WH.SCREEN.INPUTCODE
            done%=1
          case else
            WH.missingId$=ids$(pos%)
            WH.productName$=names$(pos%)
            WH.productCode$=productCodes$(pos%)
            if func% = APP.FUNC.INVENTORY% then
              if WH.existsBarcode% = 1 then
                ' issue new JAN
                WH.ChooseMissing%=WH.SCREEN.ISSUENEWJAN
              else
                ' update
                WH.ChooseMissing%=WH.SCREEN.REGISTER
              end if
            else
              ' update barcode info
              WH.ChooseMissing%=WH.SCREEN.REGISTER
            end if
            done%=1
          end select
      else
          WH.missingId$=""
          WH.ChooseMissing%=WH.SCREEN.SCAN
          done%=1
      end if
    wend
  end function

'------------------------------------------------------------
' input item code to register
'------------------------------------------------------------
  function WH.InputItemCode%(func%)
    private numStr$[20]
    private done%: done%=0
    private found%: found%=0
    private ret$[Com.RECVSIZE]
    private cnt%
    private data$(2)[100]

    while done%=0
      call Screen.Init
      call Screen.Footer

      locate 1,1
      print "产品编号是?"
      locate 1,3
      numStr$=Input.Input$(12,1) 'up to 12 digits
      if instr(Input.CODE.ESC$,numStr$)>0 then
        private r%
        r%=PostCache.Flush%
        done%=1
      else
        locate 1,5
        print "产品信息获取中..."
        ret$= Com.Http.Get$(Com.Http.URLPREFIX$+"/getItem.php?ac="+numStr$)
        cnt%=Util.ParseListData%(ret$,data$)
        if data$(0)<>"" then
          WH.missingId$=data$(0)   '-- product id
          WH.productName$=data$(1) '-- item name
          WH.productCode$=numStr$
          found%=1
          done%=1
        else
          ' not found...
          WH.missingId$=""
          WH.productName$=""
          WH.productCode$=""
          locate 1,5
          print "未找到"
          Input.InputAnyKey
        end if
      end if
    wend

    if found%=1 then
      WH.InputItemCode%=WH.SCREEN.VERIFYITEM
    else
      WH.InputItemCode%=WH.SCREEN.MISSING
    end if
  end function

'------------------------------------------------------------
' register an item
'------------------------------------------------------------
  function WH.RegisterItem%(func%)
    private ret$[Com.RECVSIZE]
    private s%

    call Screen.Init
    call Screen.Footer
    if WH.missingId$=WH.NOTFOUND$ then
      locate 1,1
      print "无此商品"
      if WH.existsBarcode%=1 then
        print "输入基础数据后再重新扫描"
      else
      print
        print "输入基础数据后在重新扫描"
      end if
      Input.InputAnyKey
    else
      s%=ItemCache.NullBarcode%(WH.barcode$)
      s%=ItemCache.UpdateBarcode%(WH.missingId$,WH.productName$,WH.productCode$,WH.barcode$,0)
      locate 1,1
      if func%=APP.FUNC.INBOUND% or func%=APP.FUNC.INVENTORY% then
        print "数据加入队列..."
        s%=PostCache.Queue%(WH.barcode$,WH.num$,WH.missingId$,func%)
        if s%=0 then
          ret$="OK"
        else
          ret$="ERR"
        end if
      else
        print "条码更新中..."
        ret$= Com.Http.Post$(Com.Http.URLPREFIX$+"/updateItem.php","c="+WH.barcode$+"&n="+WH.num$+"&id="+WH.missingId$+"&f="+mid$(str$(func%),2))
      end if
      private data$(2)[512]
      private cnt%
      cnt%=Util.ParseListData%(ret$,data$)
      ret$=data$(0)
    select ret$
      case"OK"
      '--print "完了!"
      '--Input.InputAnyKey
      case "OUTOFSTOCK"
        beep 1
        print "超过库存量"
        Input.InputAnyKey
      case else
        print "更新失败!"
        print "请重新扫描";
        Input.InputAnyKey
    end select
    end if
    
    WH.RegisterItem%=WH.SCREEN.SCAN
  end function

'------------------------------------------------------------
' ask to issue a new JAN code
'------------------------------------------------------------
  function WH.IssueNewJan%(func%)
    private ret$[Com.RECVSIZE]

    call Screen.Init
    call Screen.Footer

    locate 1,1
    print "条码已经用于其他商品"
    print "请发行新条码再扫描"
    Input.InputAnyKey
    WH.IssueNewJan%=WH.SCREEN.SCAN

  end function

'------------------------------------------------------------
' main
'------------------------------------------------------------
  sub WH.Main(func%)
    private isScreen%
    private nextScreen%

    '-- init
    ItemCache.init
    PostCache.init

    Com.ReadConfig '-- read communication config file

    '-- flush post cached data
    private ret%
    ret%=PostCache.Flush%

    '-- init
    isScreen% = WH.SCREEN.START
    nextScreen% = WH.SCREEN.START
    while nextScreen% <> WH.SCREEN.FINISH
      'set next screen
      if isScreen% <> nextScreen% then
        isScreen% = nextScreen%
      end If

      select isScreen%
        case WH.SCREEN.USER
          nextScreen% = WH.ScanUser%(func%)
        case WH.SCREEN.SCAN
          nextScreen% = WH.ScanBarcode%(func%)
        case WH.SCREEN.VERIFY
          nextScreen% = WH.VerifyBarcode%(func%)
        case WH.SCREEN.VERIFYITEM
          nextScreen% = WH.VerifyItem%(func%)
        case WH.SCREEN.SEND
          nextScreen% = WH.SendBarcode%(func%)
        case WH.SCREEN.REGISTER
          nextScreen% = WH.RegisterItem%(func%)
        case WH.SCREEN.MISSING
          nextScreen% = WH.ChooseMissing%(func%)
        case WH.SCREEN.ISSUENEWJAN
          nextScreen% = WH.IssueNewJan%(func%)
        case WH.SCREEN.INPUTCODE
          nextScreen% = WH.InputItemCode%(func%)
        end select
    wend
  end sub

'------------------------------------------------------------
Main
  call WH.Main(APP.func%)
  chain "init.pd4"

